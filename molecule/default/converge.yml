---
- name: Converge
  hosts: all
  gather_facts: false

  tasks:
    - name: Download and setup custom certificate
      when: ingress_custom_ca_cert_url | default(False)
      block:
        - name: Set the path to the custom ca
          ansible.builtin.set_fact:
            ingress_custom_ca_cert: /tmp/custom_ca_cert.pem

        - name: Download custom CA
          ansible.builtin.uri:
            url: "{{ ingress_custom_ca_cert_url }}"
            dest: "{{ ingress_custom_ca_cert }}"
            status_code:
              - 200
              - 304
          tags:
            - molecule-idempotence-notest

    # FIXME: find out how to do replacements for molecule that support default
    #        values of '{}'
    - name: Patch ansible variables that should default to empty dict
      ansible.builtin.set_fact:
        ingress_traefik_certificates_resolvers: "{{ ingress_traefik_certificates_resolvers or {} }}"
        ingress_traefik_environment_variables: "{{ ingress_traefik_environment_variables or {} }}"
        ingress_traefik_secrets: "{{ ingress_traefik_secrets or {} }}"

    - name: Setup everything
      ansible.builtin.import_role:
        name: benschubert.infrastructure.main

    - name: Get the Grafana group info
      benschubert.infrastructure.authentik_group_info:
        authentik_token: "{{ auth_authentik_token }}"
        authentik_url: https://{{ auth_authentik_hostname }}:{{ ingress_https_port }}
        ca_path: "{{ ingress_custom_ca_cert | default(omit) }}"
        validate_certs: "{{ ingress_validate_certs }}"
        name: "{{ monitoring_grafana_admin_group_name }}"
      register: group

    - name: Get the akadmin user info
      benschubert.infrastructure.authentik_user_info:
        authentik_token: "{{ auth_authentik_token }}"
        authentik_url: https://{{ auth_authentik_hostname }}:{{ ingress_https_port }}
        ca_path: "{{ ingress_custom_ca_cert | default(omit) }}"
        validate_certs: "{{ ingress_validate_certs }}"
        username: akadmin
      register: user

    - name: Add akadmin to the grafana admin group
      benschubert.infrastructure.authentik_user_group:
        authentik_token: "{{ auth_authentik_token }}"
        authentik_url: https://{{ auth_authentik_hostname }}:{{ ingress_https_port }}
        ca_path: "{{ ingress_custom_ca_cert | default(omit) }}"
        validate_certs: "{{ ingress_validate_certs }}"
        user_pk: "{{ user.data.pk }}"
        group_pk: "{{ group.data.pk }}"

    - name: Create a token to access services as akadmin
      benschubert.infrastructure.authentik_token:
        authentik_token: "{{ auth_authentik_token }}"
        authentik_url: https://{{ auth_authentik_hostname }}:{{ ingress_https_port }}
        ca_path: "{{ ingress_custom_ca_cert | default(omit) }}"
        validate_certs: "{{ ingress_validate_certs }}"
        token:
          identifier: molecule-test
          intent: app_password
          user: "{{ user.data.pk }}"
          description: A token to allow Akadmin to access services via APIs
          expiring: false
      register: _test
