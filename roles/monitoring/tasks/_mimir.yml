---
- name: Ensure the mimir paths exist
  become_method: containers.podman.podman_unshare
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0o700"
  loop:
    - "{{ monitoring_mimir_config_path }}"
    - "{{ monitoring_mimir_data_path }}"

- name: Create the Mimir configuration file
  become_method: containers.podman.podman_unshare
  become: true
  ansible.builtin.template:
    src: mimir.yml.j2
    dest: "{{ monitoring_mimir_config_path }}/mimir.yaml"
    mode: 0o400

- name: Create the Mimir network
  containers.podman.podman_network:
    name: ingress-monitoring
    internal: true

- name: Create the Mimir pod
  containers.podman.podman_pod:
    name: monitoring-mimir
    state: created
    infra_name: monitoring-mimir-infra
    network:
      - ingress-monitoring
    userns: auto:size=1024

- name: Setup the Mimir container
  containers.podman.podman_container:
    name: monitoring-mimir-mimir
    pod: monitoring-mimir
    state: started
    image: docker.io/grafana/mimir
    command: --config.file=/etc/mimir/mimir.yaml
    healthcheck: wget -O- http://localhost:9009
    read_only: true
    volumes:
      - "{{ monitoring_mimir_config_path }}/mimir.yaml:/etc/mimir/mimir.yaml:ro,U,Z"
      - "{{ monitoring_mimir_data_path }}:/tmp/mimir:U,Z"

- name: Ensure the mimir container is healthy
  ansible.builtin.command: podman healthcheck run monitoring-mimir-mimir
  register: _healthcheck
  until: _healthcheck is not failed
  retries: 3
  changed_when: false

- name: Create an application for mimir on Authentik
  ansible.builtin.import_role:
    name: auth
    tasks_from: application
  vars:
    application_name: mimir
    application_slug: benschubert-infrastructure-mimir
    group: admin
    meta_description: Mimir
    # yamllint disable-line rule:line-length
    icon_url: https://{{ monitoring_mimir_hostname }}:{{ ingress_exposed_https_port }}/static/mimir-icon.png
    provider_proxy:
      hostname: "{{ monitoring_mimir_hostname }}"

- name: Setup an ingress for mimir
  ansible.builtin.import_role:
    name: benschubert.infrastructure.ingress
    tasks_from: provider
  vars:
    template_file: ingress-mimir.yml.j2
    ingress_name: mimir
    hostname: "{{ monitoring_mimir_hostname }}"
    expected_status_code: 302

- name: Register Mimir as a datasource on grafana
  community.grafana.grafana_datasource:
    name: mimir
    ds_type: prometheus
    ds_url: http://monitoring-mimir:9009/prometheus
    grafana_url: https://{{ monitoring_grafana_hostname }}:{{ ingress_https_port }}
    grafana_user: "{{ monitoring_grafana_admin_user }}"
    grafana_password: "{{ monitoring_grafana_admin_password }}"
    is_default: true
    validate_certs: false
