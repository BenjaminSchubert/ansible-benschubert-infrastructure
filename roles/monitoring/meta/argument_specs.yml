---
argument_specs:
  main:
    short_description: >-
      Configure all services required to monitor services and systems.
    description:
      - This role configures a suite of services that are used to monitor
        services.
      - "It will configure the following:"
      - L(Grafana, https://grafana.com/)
      - L(Mimir, https://grafana.com/oss/mimir/), including L(AlertManager,
        https://grafana.com/docs/mimir/latest/references/architecture/components/alertmanager/)
      - L(Loki, https://grafana.com/oss/loki/)
      - L(Grafana Alloy, https://grafana.com/oss/alloy-opentelemetry-collector/)
    options:
      auth_authentik_hostname:
        type: str
        required: true
        description:
          - The hostname at which the Authentik service is reachable
      auth_authentik_token:
        type: str
        required: true
        description:
          - The token to use to connect to Authentik
      ingress_custom_ca_cert:
        type: str
        description:
          - The path on disk to a custom certificate to validate the TLS
            certificates when ansible makes requests if they are not available
            in the root certificate authorities
      ingress_https_port:
        type: int
        default: 443
        description:
          - The port at which the service is exposed via the ingress
      ingress_traefik_certificates_resolvers:
        type: dict
        default: {}
        description:
          - The configuration for the certificate resolvers
          - When created, it expects at least a 'default' entry, which will be
            used for all services that don't specify an explicit resolver in
            their configuration
          - "'storage' MUST be set as C(/etc/traefik/acme.json)"
          - See L(Traefik's documentation,
            https://doc.traefik.io/traefik/https/acme/) for more information
      ingress_validate_certs:
        type: bool
        default: true
        description:
          - Whether the TLS certificate should be verified when ansible makes
            API calls
      monitoring_grafana_admin_bootstrap_password:
        type: str
        required: false
        description:
          - The password to give to the Grafana admin user
      monitoring_grafana_admin_group_name:
        type: str
        default: Grafana Admins
        description:
          - The name of the group in Authentik that should be admins in Grafana
      monitoring_grafana_admin_password:
        type: str
        default: "{{ monitoring_grafana_admin_bootstrap_password }}"
        description:
          - The password to authenticate as admin on Grafana for setting up
            dashboards and other resources
          - Defaults to I(monitoring_grafana_admin_bootstrap_password) if not set.
      monitoring_grafana_admin_user:
        type: str
        default: admin
        description:
          - The name of the admin user for Grafana. This user will not exist on
            the Authentik service
      monitoring_grafana_allowlisted_groups:
        type: list
        elements: str
        default: null
        description:
          - A list of groups to restrict Grafana to.
          - Users not in any of the specified groups won't be able to see or
            login to Grafana.
          - C(null) or C([]) doesn't restrict the access.
          - When setting this, you should at least add
            C({{ monitoring_grafana_admin_group_name }}) to it.
      monitoring_grafana_config_path:
        type: str
        required: true
        description:
          - The path to where the Grafana configuration is to be kept
      monitoring_grafana_data_path:
        type: str
        required: true
        description:
          - The directory in which the Grafana data will be stored
      monitoring_grafana_image:
        type: str
        default: docker.io/grafana/grafana:latest
        description:
          - The container image path and tag to use for Grafana
      monitoring_grafana_postgres_data_path:
        type: str
        required: true
        description:
          - The path on disk where the PostgreSQL instance for Grafana should
            store its data
      monitoring_grafana_postgres_image:
        type: str
        default: See I(postgres_image) from the Postgres role
        description: The container image path and tag to use for Postgres
      monitoring_grafana_postgres_password:
        type: str
        required: true
        description:
          - The password used to connect to PostgreSQL database
      monitoring_grafana_hostname:
        type: str
        required: true
        description:
          - The hostname at which the Grafana instance is reachable
      monitoring_grafana_secret_key:
        type: str
        required: true
        description:
          - The secret key to use in Grafana to encrypt various sensitive data
      monitoring_loki_allowlisted_groups:
        type: list
        elements: str
        default: null
        description:
          - A list of groups to restrict Loki to.
          - Users not in any of the specified groups won't be able to see or
            login to Loki.
          - C(null) or C([]) doesn't restrict the access.
      monitoring_loki_config_path:
        type: str
        required: true
        description:
          - The path on disk where the Loki configuration files should be stored.
      monitoring_loki_data_path:
        type: str
        required: true
        description:
          - The path on disk where the Loki data should be stored.
      monitoring_loki_hostname:
        type: str
        required: true
        description:
          - The hostname at which the Loki instance is reachable.
      monitoring_loki_image:
        type: str
        default: docker.io/grafana/loki:latest
        description:
          - The container image path and tag to use for Loki
      monitoring_mimir_additional_networks:
        type: list
        elements: str
        default: []
        description:
          - A list of additional podman networks that need to be attached to the
            Mimir pod.
          - This is useful if you want to configure a SMTP gateway for sending
            emails via AlertManager.
      monitoring_mimir_alertmanager_config_template:
        type: str
        default: mimir-alertmanager-fallback-config.yml.j2
        description:
          - The name of the template to use to configure the AlertManager routing
      monitoring_mimir_allowlisted_groups:
        type: list
        elements: str
        default: null
        description:
          - A list of groups to restrict Mimir to.
          - Users not in any of the specified groups won't be able to see or
            login to Mimir.
          - C(null) or C([]) doesn't restrict the access.
      monitoring_mimir_hostname:
        type: str
        required: true
        description:
          - The hostname at which the Mimir instance is reachable.
      monitoring_mimir_config_path:
        type: str
        required: true
        description:
          - The path on disk where the Mimir configuration files should be stored.
      monitoring_mimir_data_path:
        type: str
        required: true
        description:
          - The path on disk where the Mimir data should be stored.
      monitoring_mimir_image:
        type: str
        default: docker.io/grafana/mimir:latest
        description:
          - The container image path and tag to use for Mimir
      monitoring_mimir_secrets:
        type: dict
        default: {}
        description:
          - "A list of secrets to inject into the Mimir container as
            <key: value>"
          - The secrets will be exposed under /run/secrets/monitoring-mimir-<key>
            with the key having '_' replaced by '-'
      monitoring_monitor_agent_config_path:
        type: str
        required: true
        description:
          - The path at which the Grafana Alloy monitoring the monitoring stack
            should store its configuration
      monitoring_monitor_agent_data_path:
        type: str
        required: true
        description:
          - The path at which the Grafana Alloy monitoring the monitoring stack
            should store its data
      monitoring_monitor_agent_alloy_image:
        type: str
        default: See I(monitoring_agent_alloy_image) from the Monitoring role
        description: The container image path and tag to use for Alloy
      monitoring_monitor_agent_user_group:
        type: str
        default: null
        description:
          - A group name to which to add the role account that is created for
            monitoring the monitoring stack.
          - This is useful if you want to restrict apps per user, so you can
            have those bots publish their metrics correctly.
  agent:
    short_description: >-
      Configure a Grafana alloy service to monitor some systems
    description:
      - This role configures a
        L(Grafana Alloy, https://grafana.com/oss/alloy-opentelemetry-collector/)
        container to monitor the provided services.
    options:
      auth_authentik_hostname:
        type: str
        required: true
        description:
          - The hostname at which the Authentik service is reachable
      auth_authentik_token:
        type: str
        required: true
        description:
          - The token to use to connect to Authentik
      ingress_custom_ca_cert:
        type: str
        description:
          - The path on disk to a custom certificate to validate the TLS
            certificates when ansible makes requests if they are not available
            in the root certificate authorities
      ingress_https_port:
        type: int
        default: 443
        description:
          - The port at which the service is exposed via the ingress, in order
            to be able to make API calls to the service
      ingress_validate_certs:
        type: bool
        default: true
        description:
          - Whether the TLS certificate should be verified when ansible makes
            API calls
      monitoring_agent_config_path:
        type: str
        required: true
        description:
          - The path on disk where to store the agent's configuration
      monitoring_agent_data_path:
        type: str
        required: true
        description:
          - The path on disk where the agent can store it's own data
      monitoring_agent_alloy_image:
        type: str
        default: docker.io/grafana/alloy:latest
        description:
          - The container image path and tag to use for Alloy
      monitoring_agent_networks:
        type: list
        elements: str
        required: true
        description:
          - The networks that the agent should be joining
      monitoring_agent_container:
        type: str
        required: true
        description:
          - The name of the container to deploy the agent in.
          - It will be also used to create a user in Authentik to allow access
            protected services
      monitoring_mimir_hostname:
        type: str
        required: true
        description:
          - The hostname at which to find the Mimir deployment
      monitoring_agent_postgres_instances:
        type: list
        elements: dict
        default: []
        description:
          - A list of PostgreSQL databases to monitor
        options:
          database:
            type: str
            required: true
            description:
              - The name of the database to which to connect
          instance:
            type: str
            required: true
            description:
              - The hostname of the database to which to connect
          password:
            type: str
            required: true
            description:
              - The password to use to connect to the database
          username:
            type: str
            required: true
            description:
              - The username to use to connect to the database
      monitoring_agent_product_name:
        type: str
        required: true
        description:
          - A human readable name of what this agent monitors. Used in alerting
            to group alerts together.
      monitoring_agent_prometheus_endpoints:
        type: list
        elements: dict
        default: []
        description:
          - A list of Prometheus endpoints to monitor
        options:
          name:
            type: str
            required: true
            description:
              - A human-readable name for the service to monitor. Will be also
                used as the C(instance) label.
          address:
            type: str
            required: true
            description:
              - The endpoint on which to fetch the Prometheus metrics
          alerting_rules_template:
            type: str
            required: false
            description:
              - A Jinja template defining Prometheus rules to generate alerts
              - The variable C(job_name) and C(name) are available to uniquely
                identify the job.
          metrics_path:
            type: str
            default: /metrics
            description:
              - The path under which to scrape the metrics
      monitoring_agent_redis_instances:
        type: list
        default: []
        elements: dict
        description:
          - A list of Redis instances to monitor
        options:
          name:
            type: str
            required: true
            description:
              - The hostname of the Redis instance
          password:
            type: str
            required: true
            description:
              - The password for the user to use for metrics collection on
                Redis, to use to authenticate.
          user:
            type: str
            required: true
            description:
              - The username to use to authenticate against Redis
      monitoring_agent_user_group:
        type: str
        default: null
        description:
          - A group name to which to add the role account that is created for
            monitoring the requested services.
          - This is useful if you want to restrict apps per user, so you can
            have those bots publish their metrics correctly.
  dashboard:
    short_description: Install the provided dashboard on Grafana
    description:
      - This role allows setting up a dashboard on Grafana
    options:
      content:
        type: str
        required: true
        description:
          - The JSON content of the dashboard to setup
      destination:
        type: str
        required: true
        description:
          - The name of the dashboard on the file-system. Can contain one level
            of directory
          - For example, C(mydashboard.json) or C(services/grafana.json)
      monitoring_grafana_config_path:
        type: str
        required: true
        description:
          - The path to where the Grafana configuration is kept
