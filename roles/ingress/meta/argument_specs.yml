---
argument_specs:
  main:
    short_description: >-
      Setup a reverse proxy using podman to expose services using Traefik
    description:
      - This sets up a L(Traefik, https://traefik.io/) webserver to act as a
        reverse proxy and gateway to expose the rest of the services in this
        collection.
    options:
      ingress_http_port:
        type: int
        required: false
        default: null
        description:
          - The port that Traefik should use to expose its http interface on the
            host.
      ingress_https_port:
        type: int
        required: false
        default: null
        description:
          - The port that Traefik should use to expose its https interface on
            the host.
      ingress_networks:
        type: list
        elements: str
        required: true
        description:
          - The list of podman networks that the Traefik pod should attach to.
          - This is to let Traefik act as a reverse proxy for other services
            hosted in podman, without exposing them to other places.
      ingress_traefik_certificates_resolvers:
        type: dict
        default: {}
        description:
          - The configuration for the certificate resolvers
          - When created, it expects at least a 'default' entry, which will be
            used for all services that don't specify an explicit resolver in
            their configuration
          - See L(Traefik's documentation,
            https://doc.traefik.io/traefik/https/acme/) for more information
      ingress_traefik_configuration_files_path:
        type: str
        required: true
        description:
          - The directory in which the configuration files for Traefik will be
            stored
      ingress_traefik_environment_variables:
        type: dict
        default: {}
        description:
          - "A list of environment variables to set for Traefik as <key: value>"
          - This can be used, e.g., to configure the certificate resolver.
          - For secrets, use C(ingress_traefik_secrets) instead.
      ingress_traefik_secrets:
        type: dict
        default: {}
        description:
          - "A list of secrets to inject into the Traefik container as
            <key: value>"
          - The key of each secret will be set as an environment variable
            pointing to the secret containing the value
      template_warning:
        type: str
        required: true
        description:
          - A warning that this role will add to the top of each file it creates
            so users know it is managed by an automated process.
  provider:
    short_description: >-
      Configures a new provider to expose a service on the ingress
    description:
      - This sets up a configuration fragment on Traefik to expose a new
        services
      - See
        L(the Traefik documentation, https://doc.traefik.io/traefik/routing/overview/)
        for more information
      - This entry point also ensures that the service is available afterwards.
        As such, the service should already be configured
    options:
      template_file:
        type: str
        required: true
        description:
          - The ansible template to resolve for generating the configuration
      ingress_traefik_configuration_files_path:
        type: str
        required: true
        description:
          - The path on disk where all the configurations are stored
      ingress_name:
        type: str
        required: true
        description:
          - The name to give to the configuration file that the template is
            rendered as
      hostname:
        type: str
        required: true
        description:
          - The hostname at which the service should be exposed
          - This is used to ensure that the service is now available
      ingress_https_port:
        type: int
        default: 443
        description:
          - The port at which the service is exposed via the ingress, in order
            to be able to make API calls to the service
      ingress_custom_ca_cert:
        type: str
        description:
          - The path on disk to a custom certificate to validate the TLS
            certificates if they are not available in the root certificate
            authorities
      ingress_validate_certs:
        type: bool
        default: true
        description:
          - Whether the TLS certificate to access the service should be
            validated or not
      expected_status_code:
        type: int
        default: true
        description:
          - The status code that the service is expected to return when reached
            at /
          - Used when validating that the service is indeed reachable
  finalize:
    short_description: >-
      Expose the Traefik dashboard on the instance deployed via the main
      entry-point and enables metrics monitoring
    description:
      - The service as created will be protected by Authentik and requires
        authentication
      - It thus needs to run only once the Authentik service has been brought up.
    options:
      auth_authentik_hostname:
        type: str
        required: true
        description:
          - The hostname at which the Authentik service is reachable
      auth_authentik_token:
        type: str
        required: true
        description:
          - The token to use to connect to Authentik
      ingress_custom_ca_cert:
        type: str
        description:
          - The path on disk to a custom certificate to validate the TLS
            certificates when ansible makes requests if they are not available
            in the root certificate authorities
      ingress_monitor_agent_config_path:
        type: str
        required: true
        description:
          - The path on disk where to store the monitoring's agent configuration
            file-system
      ingress_monitor_agent_data_path:
        type: str
        required: true
        description:
          - The path on disk where to store the monitoring's agent data
      ingress_monitor_agent_alloy_image:
        type: str
        default: See I(monitoring_agent_alloy_image) from the Monitoring role
        description: The container image path and tag to use for Alloy
      ingress_monitor_agent_user_group:
        type: str
        default: null
        description:
          - A group name to which to add the user that is created for monitoring
            Traefik.
          - This is useful if you want to restrict apps per user, so you can
            have those bots publish their metrics correctly.
      ingress_traefik_allowlisted_groups:
        type: list
        elements: str
        default: null
        description:
          - A list of groups to restrict the Traefik dashboard to.
          - Users not in any of the specified groups won't be able to see or
            login to the dashboard.
          - C(null) or C([]) doesn't restrict the access.
      ingress_traefik_dashboard_hostname:
        type: str
        required: true
        description:
          - The hostname under which to expose the Traefik dashboard
      ingress_https_port:
        type: int
        required: false
        default: 443
        description:
          - The port under which Traefik is exposed to the outside world. This
            is used to be able to show the icon of Traefik on
      ingress_traefik_certificates_resolvers:
        type: dict
        default: {}
        description:
          - The configuration for the certificate resolvers
          - When created, it expects at least a 'default' entry, which will be
            used for all services that don't specify an explicit resolver in
            their configuration
          - "'storage' MUST be set as C(/etc/traefik/acme.json)"
          - See L(Traefik's documentation,
            https://doc.traefik.io/traefik/https/acme/) for more information
      ingress_traefik_image:
        type: str
        default: docker.io/traefik:latest
        description: The container image path and tag to use for Traefik
      ingress_validate_certs:
        type: bool
        default: true
        description:
          - Whether the TLS certificate should be verified when ansible makes
            API calls
      monitoring_grafana_config_path:
        type: str
        required: true
        description:
          - The path to where the Grafana configuration is kept
          - This is used to install a basic dashboard for viewing metrics
      template_warning:
        type: str
        required: true
        description:
          - A warning that this role will add to the top of each file it creates
            so users know it is managed by an automated process.
