---
- name: Create the required networks
  containers.podman.podman_network:
    name: "{{ item }}"
    internal: true
  loop: "{{ ingress_networks }}"

- name: Create an ingress network to allow external access
  containers.podman.podman_network:
    name: ingress
    internal: false

- name: Ensure the parent directory for traefik exists
  ansible.builtin.file:
    path: "{{ ingress_traefik_configuration_files_path | dirname }}"
    state: directory
    mode: "0o700"

- name: Ensure the directory for traefik configuration exists
  become_method: containers.podman.podman_unshare
  become: true
  ansible.builtin.file:
    path: "{{ ingress_traefik_configuration_files_path }}/config/providers"
    state: directory
    mode: "0o700"

- name: Create the traefik main configuration
  become_method: containers.podman.podman_unshare
  become: true
  ansible.builtin.template:
    src: traefik.yml.j2
    dest: "{{ ingress_traefik_configuration_files_path }}/config/traefik.yml"
    mode: "0o400"
  register: _configuration

- name: Create the acme.json file to store certificates
  become_method: containers.podman.podman_unshare
  become: true
  ansible.builtin.file:
    path: "{{ ingress_traefik_configuration_files_path }}/acme.json"
    access_time: preserve
    modification_time: preserve
    state: touch
    mode: "0o600"

- name: Create the required secrets
  containers.podman.podman_secret:
    name: ingress-traefik-{{ item.key.lower().replace('_', '-') }}
    data: "{{ item.value }}"
    state: present
  loop: "{{ ingress_traefik_secrets | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

- name: Create the ingress pod
  containers.podman.podman_pod:
    name: ingress
    state: started
    infra_name: ingress-infra
    network: "{{ ingress_networks + ['ingress'] }}"
    network_aliases: "{{ ingress_network_aliases }}"
    publish:
      - "{{ ingress_http_port }}:{{ ingress_http_port }}"
      - "{{ ingress_https_port }}:{{ ingress_https_port }}"
    userns: auto:size=6

- name: Setup the traefik container
  containers.podman.podman_container:
    name: ingress-traefik
    pod: ingress
    image: "{{ ingress_traefik_image }}"
    state: started
    force_restart: "{{ _configuration.changed }}"
    pull: newer
    volumes:
      - "{{ ingress_traefik_configuration_files_path }}/config:/etc/traefik:ro,U,Z"
      - "{{ ingress_traefik_configuration_files_path }}/acme.json:/etc/traefik/acme.json:rw,U,Z"
    healthcheck: traefik healthcheck
    read_only: true
    env: "{{
     ingress_traefik_environment_variables
      | combine(
        ingress_traefik_secrets
        | zip(
          ingress_traefik_secrets
          | map('lower')
          | map('replace', '_', '-')
          | map('regex_replace', '^(.*)$', '/run/secrets/ingress-traefik-\\1')
        )
        | list
        | items2dict(key_name=0, value_name=1)
      )
      }}"
    secrets: |
      {{
        ingress_traefik_secrets
        | map('lower')
        | map('regex_replace', '_', '-')
        | map('regex_replace', '^(.*)$', 'ingress-traefik-\1')
      }}
    cap_drop: [all]
    cap_add:
      # Required to bind on lower ports
      - NET_BIND_SERVICE

- name: Ensure the Traefik container is healthy
  ansible.builtin.command: podman healthcheck run ingress-traefik
  register: _healthcheck
  until: _healthcheck is not failed
  retries: 3
  changed_when: false
