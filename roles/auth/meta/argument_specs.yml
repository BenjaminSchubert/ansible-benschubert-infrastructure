---
argument_specs:
  main:
    short_description: Setup an authentication server in podman, using Authentik
    description:
      - This sets up an L(Authentik, https://goauthentik.io/) webserver to
        act as an authentication and SSO server used by the rest of the services
        in this collection.
      - Additionally, it will setup a PostgreSQL database and a Redis instance
        for it.
    options:
      auth_authentik_authentication_page_title:
        type: str
        default: Welcome to {{ auth_authentik_hostname }}
        description:
          - The title to show users when they are trying to login on Authentik
      auth_authentik_branding_title:
        type: str
        default: Authentik
        description:
          - The title of the brand to use for Authentik. This is mainly shown on
            the website's title.
      auth_authentik_configuration_path:
        type: str
        required: true
        description:
          - The directory in which the configuration files for Authentik will be
            stored
      auth_authentik_background:
        type: str
        description:
          - Name of the file to use as a background for Authentik when users
            login
      auth_authentik_email_config:
        type: dict
        default: null
        description:
          - configuration to allow Authentik to send emails when needed
        options:
          from:
            type: str
            required: true
            description:
              - The email address authentik will send from
              - In order to change the display name, use C(Name <account@domain>)
          host:
            type: str
            required: true
            description:
              - The email provider host
          password:
            type: str
            required: true
            description:
              - The password to authenticate with the email provider
          port:
            type: str
            required: true
            description:
              - The port for the SMTP service to send emails to
          username:
            type: str
            required: true
            description:
              - The username to authenticate with the email provider
          ssl:
            type: bool
            description:
              - Whether to use SSL to connect to the email provider
          tls:
            type: bool
            description:
              - Whether to use TLS to connect to the email provider
      auth_authentik_hostname:
        type: str
        required: true
        description:
          - The hostname under which Authentik should be reachable
      auth_authentik_icon:
        type: str
        description:
          - Name of the SVG file to use as an icon for Authentik on login screen
      auth_authentik_image:
        type: str
        default: ghcr.io/goauthentik/server:latest
        description: The container image path and tag to use for Authentik
      auth_authentik_secret_key:
        type: str
        required: true
        description:
          - Secret key used for cookie signing and unique user IDs, don't change
            this after the first install.
      auth_authentik_superadmin_bootstrap_password:
        type: str
        default: null
        description:
          - The password for the super admin that Authentik creates at bootstrap
          - Only required for the first run.
      auth_authentik_superadmin_bootstrap_token:
        type: str
        default: null
        description:
          - The value of the token to create for the super admin at bootstrap
          - This is then used to connect to Authentik
      auth_monitor_agent_config_path:
        type: str
        required: true
        description:
          - The path on disk where to store the monitoring's agent configuration files
      auth_monitor_agent_data_path:
        type: str
        required: true
        description:
          - The path on disk where to store the monitoring's agent data
      auth_monitor_agent_alloy_image:
        type: str
        default: See I(monitoring_agent_alloy_image) from the Monitoring role
        description: The container image path and tag to use for Alloy
      auth_monitor_agent_user_group:
        type: str
        default: null
        description:
          - A group name to which to add the role account that is created for
            monitoring Authentik.
          - This is useful if you want to restrict apps per user, so you can
            have those bots publish their metrics correctly.
      auth_postgres_data_path:
        type: str
        required: true
        description:
          - The path on disk where the PostgreSQL instance should store its data
      auth_postgres_image:
        type: str
        default: See I(postgres_image) from the Postgres role
        description: The container image path and tag to use for Postgres
      auth_postgres_password:
        type: str
        required: true
        description:
          - The password used to connect to PostgreSQL database
      auth_redis_config_path:
        type: str
        required: true
        description:
          - The path on disk where the Redis instance should store its
            configurations
      auth_redis_data_path:
        type: str
        required: true
        description:
          - The path on disk where the Redis instance should store its data
      auth_redis_image:
        type: str
        default: See I(redis_image) from the Redis role
        description: The container image path and tag to use for Redis
      auth_redis_metrics_password:
        type: str
        required: true
        description:
          - The password to allow the metric gathering agent to connect to Redis
      auth_redis_password:
        type: str
        required: true
        description:
          - The password that Authentik will use to connect to Redis
          - This is also used to configure the Redis instance
      auth_worker_additional_networks:
        type: list
        elements: str
        default: []
        description:
          - A list of additional podman networks that need to be attached to the
            Authentik worker pod.
          - This is useful if you want to configure a SMTP gateway for sending
            emails via Authentik. For example, this would allow validating and
            resetting emails.
      ingress_custom_ca_cert:
        type: str
        description:
          - The path on disk to a custom certificate to validate the TLS
            certificates if they are not available in the root certificate
            authorities
          - If set, this will be used whenever contacting the Authentik server
      ingress_https_port:
        type: int
        default: 443
        description:
          - The port at which the service is exposed via the ingress, in order
            to be able to make API calls to the service
      monitoring_grafana_config_path:
        type: str
        required: true
        description:
          - The path to where the Grafana configuration is kept
          - This is used to install dashboards for viewing metrics
      template_warning:
        type: str
        required: true
        description:
          - A warning that this role will add to the top of each file it creates
            so users know it is managed by an automated process.
  application:
    short_description: Setup an application and provider to protect an application via proxy
    description:
      - This role creates an
        L(application, https://docs.goauthentik.io/docs/applications) and a
        L(proxy provider, https://docs.goauthentik.io/docs/add-secure-apps/providers/proxy/) in
        order to protect an application via Authentik.
    options:
      allowlisted_groups:
        type: list
        elements: str
        default: null
        description:
          - A list of groups to restrict the application to.
          - Users not in any of the specified groups won't be able to see or
            login to the application.
          - C(null) or C([]) doesn't restrict the access.
      application_name:
        type: str
        required: true
        description:
          - The human readable name for the application as registered in
            Authentik
      application_slug:
        type: str
        required: true
        description:
          - The unique identifier for the application in Authentik
      auth_authentik_hostname:
        type: str
        required: true
        description:
          - The hostname at which the Authentik instance is reachable
      auth_authentik_token:
        type: str
        required: true
        description:
          - The token to use to connect to Authentik
      group:
        type: str
        required: true
        description:
          - The group to which to add the application on the Authentik dashboard
      icon_url:
        type: str
        required: true
        description:
          - The URL at which to find the icon for the application, to be
            displayed on the Authentik dashboard
      ingress_custom_ca_cert:
        type: str
        description:
          - The path on disk to a custom certificate to validate the TLS
            certificates if they are not available in the root certificate
            authorities
      ingress_https_port:
        type: int
        default: 443
        description:
          - The port at which the service is exposed via the ingress.
      ingress_validate_certs:
        type: bool
        default: true
        description:
          - Whether the TLS certificate to access Authentik should be validated
            or not
      meta_description:
        type: str
        required: true
        description:
          - The description to show on the dashboard about the application
      provider_oauth2:
        type: dict
        description:
          - The configuration for the provider if it is using OAuth2
          - Mutually exclusive with C(provider_proxy)
        options:
          redirect_uris:
            description:
              - The list of valid URIs where Authentik can redirect after login
              - "Each entry must be a dict of {url: <url>, matching_mode: \"strict\" | \"regex\"}"
            type: list
            elements: dict
            required: true
          scopes:
            description:
              - The scopes allowed for the OAuth2 application
            type: list
            required: true
      provider_proxy:
        type: dict
        description:
          - The configuration for the provider if it is using the proxy mode
          - Mutually exclusive with C(provider_oauth2)
        options:
          hostname:
            type: str
            required: true
            description:
              - The external facing hostname for the application to register
