---
- name: Ensure the PostgreSQL database path exists for {{ postgres_database }}
  become_method: containers.podman.podman_unshare
  become: true
  ansible.builtin.file:
    path: "{{ postgres_data_path }}"
    state: directory
    mode: "0o700"

- name: Create the PostgreSQL network for {{ postgres_database }}
  containers.podman.podman_network:
    name: "{{ postgres_network }}"
    internal: true
    state: quadlet

- name: Create the PostgreSQL pod for {{ postgres_database }}
  containers.podman.podman_pod:
    name: "{{ postgres_pod }}"
    state: quadlet
    infra_name: "{{ postgres_pod }}-infra"
    network:
      - "{{ postgres_network }}.network"
    userns: auto:size=1000
  register: _pod

- name: Setup a PostgreSQL container for {{ postgres_database }}
  containers.podman.podman_container:
    name: "{{ postgres_pod }}-postgres"
    pod: "{{ postgres_pod }}.pod"
    image: "{{ postgres_image }}"
    user: postgres
    state: quadlet
    volumes:
      - "{{ postgres_data_path }}:/var/lib/postgresql/data:rw,U,Z"
    env:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-password
      POSTGRES_USER: "{{ postgres_user }}"
      POSTGRES_DB: "{{ postgres_database }}"
    secrets:
      - "{{ postgres_password_secret }},target=/run/secrets/postgres-password"
    healthcheck: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
    healthcheck_interval: 1m
    health_startup_interval: 10s
    health_startup_timeout: 5min
    sdnotify: healthy
    pull: newer
    read_only: true
    cap_drop: [all]
    shm_size: 256m
    tmpfs:
      /var/run: rw
    quadlet_filename: "{{ postgres_pod }}"
    quadlet_options:
      - |
        [Service]
        TimeoutSec=5min
  register: _container

- name: Ensure the PostgreSQL container is running for {{ postgres_database }}
  ansible.builtin.systemd_service:
    name: "{{ postgres_pod }}"
    scope: user
    state: "{{ (_pod.changed or _container.changed) | ternary('restarted', 'started') }}"
    enabled: true
    daemon_reload: true

- name: Ensure the PostgreSQL container is healthy for {{ postgres_database }}
  ansible.builtin.command: podman healthcheck run {{ postgres_pod }}-postgres
  changed_when: false

- name: Install Postgres dashboard for {{ postgres_database }}
  ansible.builtin.import_role:
    name: benschubert.infrastructure.monitoring
    tasks_from: dashboard
  vars:
    content: >-
      {{
        lookup(
          'ansible.builtin.url',
          'https://grafana.com/api/dashboards/455/revisions/latest/download',
          split_lines=False,
        )
        | regex_replace("\${DS_PROMETHEUS}", "mimir")
        | from_json
        | to_json(indent=4)
      }}
    destination: postgres/postgres-overview.json
